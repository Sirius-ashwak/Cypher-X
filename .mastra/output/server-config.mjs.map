{"version":3,"file":"server-config.mjs","sources":["../../src/mastra/index.ts"],"sourcesContent":["import { Mastra, createWorkflow, createStep } from '@mastra/core';\r\nimport { z } from 'zod';\r\nimport { logger } from '../utils/logger';\r\n\r\n/**\r\n * Complete Mastra Configuration for Project Cypher\r\n * \r\n * This file sets up the complete Mastra framework with:\r\n * - Agents for autonomous trading\r\n * - Tools for secure blockchain interactions\r\n * - Workflows for trading logic\r\n */\r\n\r\n// Define a simple workflow step\r\nconst analyzeMarketStep = createStep({\r\n  id: 'analyzeMarket',\r\n  description: 'Analyze current market conditions',\r\n  inputSchema: z.object({\r\n    symbol: z.string(),\r\n  }),\r\n  outputSchema: z.object({\r\n    signal: z.enum(['BUY', 'SELL', 'HOLD']),\r\n    confidence: z.number().min(0).max(1),\r\n  }),\r\n  execute: async (_context) => {\r\n    logger.info('Analyzing market');\r\n    \r\n    // Simulated market analysis\r\n    const signals = ['BUY', 'SELL', 'HOLD'] as const;\r\n    const signal = signals[Math.floor(Math.random() * signals.length)];\r\n    const confidence = Math.random();\r\n    \r\n    return {\r\n      signal,\r\n      confidence,\r\n    };\r\n  },\r\n});\r\n\r\n// Define a simple workflow\r\nexport const tradingWorkflow = createWorkflow({\r\n  id: 'tradingWorkflow',\r\n  description: 'Simple trading workflow',\r\n  inputSchema: z.object({\r\n    symbol: z.string(),\r\n  }),\r\n  outputSchema: z.object({\r\n    completed: z.boolean(),\r\n    result: z.string(),\r\n  }),\r\n  steps: [analyzeMarketStep],\r\n});\r\n\r\n// Import the agent directly\r\nimport { cypherAgent } from './agents/cypherAgent';\r\n\r\n// Initialize Mastra with the components\r\nexport const mastra: Mastra = new Mastra({\r\n  agents: {\r\n    cypherAgent,\r\n  },\r\n  workflows: {\r\n    tradingWorkflow,\r\n  },\r\n});\r\n\r\n// Export individual components\r\nexport { tradingTool } from './tools/tradingTool';\r\nexport { analyzeMarketStep };\r\n\r\nexport default mastra;\r\n"],"names":[],"mappings":"AAEA,eAAS,MAAA;AAYT;;;;"}